x-docker-data: &geth-node
  image: ${DOCKER_IMAGE}
  restart: unless-stopped
  network_mode: host
  volumes:
    - data:/data
    - config:/config

services:
  boot:
    <<: *geth-node
    container_name: boot
    profiles: [ "boot", "full-blockchain" ]
    env_file:
      - nodes/.env
      - nodes/boot/.env

  signer:
    <<: *geth-node
    container_name: signer
    profiles: [ "signer", "full-blockchain" ]
    env_file:
      - nodes/.env
      - nodes/signer/.env

  member:
    <<: *geth-node
    profiles: [ "member" ]
    container_name: member
    env_file:
      - nodes/.env
      - nodes/member/.env
    build:
      dockerfile: nodes/member/Dockerfile

  archive:
    <<: *geth-node
    profiles: [ "archive" ]
    container_name: archive
    env_file:
      - nodes/.env
      - nodes/archive/.env

  service:
    <<: *geth-node
    container_name: service
    profiles: [ "service", "full-blockchain" ]
    env_file:
      - nodes/.env
      - nodes/service/.env

  redis_db:
    image: 'redis:alpine'
    network_mode: host
    profiles: [ "archive" ]
    container_name: redis_db
    command: redis-server
    volumes:
      - blockscout-redis-data:/data

  db:
    image: postgres:14
    restart: always
    container_name: 'postgres'
    command: postgres -c 'max_connections=2000'
    environment:
      POSTGRES_PASSWORD: ''
      POSTGRES_USER: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - blockscout-postgres-data:/var/lib/postgresql/data
    network_mode: host
    profiles: [ "archive" ]

  blockscout:
    depends_on:
      - db
      - smart-contract-verifier
      - redis_db
      - archive
    image: blockscout/blockscout:${DOCKER_TAG:-latest}
    restart: always
    container_name: 'blockscout'
    command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    network_mode: host
    profiles: [ "archive" ]
    volumes:
      -   blockscout-autobahn-images:/app/lib/block_scout_web-4.1.8/priv/static/images/autobahn
    env_file:
      -  ./blockscout/blockscout.env
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      BLOCK_TRANSFORMER: 'clique'
      ETHEREUM_JSONRPC_HTTP_URL: http://127.0.0.1:8545/
      DATABASE_URL: postgresql://postgres:@127.0.0.1:5432/blockscout?ssl=false
      ECTO_USE_SSL: 'false'
      SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'

  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    restart: always
    network_mode: host
    profiles: [ "archive" ]
    container_name: 'smart-contract-verifier'
    env_file:
      -  ./blockscout/common-smart-contract-verifier.env

volumes:
  blockscout-redis-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${MOUNT_DIR}/data/blockscout/redis-data
  blockscout-postgres-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${MOUNT_DIR}/data/blockscout/postgres-data
  blockscout-autobahn-images:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${MOUNT_DIR}/autobahn-nodes/docker/blockscout/autobahn/images